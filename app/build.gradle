apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

def versionMajor = 1
def versionMinor = 0
def versionPatch = 0

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.mercadolibre.mobilecandidate"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode versionMajor * 1000000 + versionMinor * 1000 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    final SUPPORT_LIBRARY_VERSION = '28.0.0'
    final CONSTRAINT_LAYOUT_VERSION = '1.1.3'
    final JUNIT_VERSION = '4.12'
    final RUNNER_VERSION = '1.0.2'
    final EXPRESSO_VERSION = '3.0.2'
    final RETROFIT_VERSION = '2.3.0'
    final LIFECYCLE_VERSION = '1.1.1'
    final OKHTTP_VERSION = '3.10.0'
    final MOCKITO_VERSION = '2.6.2'
    final LEAKCANARY_VERSION = '1.6.3'
    final TIMBER_VERSION = '4.7.1'

    def mockito = "org.mockito:mockito-core:$MOCKITO_VERSION"
    def mockitoKotlin = "com.nhaarman:mockito-kotlin:1.1.0"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
    implementation "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
    implementation "com.android.support:support-v4:$SUPPORT_LIBRARY_VERSION"
    implementation "com.android.support:design:$SUPPORT_LIBRARY_VERSION"
    implementation "com.android.support:cardview-v7:$SUPPORT_LIBRARY_VERSION"
    implementation "com.android.support:recyclerview-v7:$SUPPORT_LIBRARY_VERSION"
    implementation "com.android.support.constraint:constraint-layout:$CONSTRAINT_LAYOUT_VERSION"
    testImplementation "junit:junit:$JUNIT_VERSION"
    testImplementation mockito
    testImplementation(mockitoKotlin) {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
    }
    testImplementation "android.arch.core:core-testing:$LIFECYCLE_VERSION"
    androidTestImplementation "com.android.support.test:runner:$RUNNER_VERSION"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$EXPRESSO_VERSION"

    implementation "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    implementation "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$RETROFIT_VERSION"

    implementation "android.arch.lifecycle:common-java8:$LIFECYCLE_VERSION"
    implementation "android.arch.lifecycle:extensions:$LIFECYCLE_VERSION"
    implementation "android.arch.lifecycle:viewmodel:$LIFECYCLE_VERSION"
    implementation "com.squareup.okhttp3:okhttp:$OKHTTP_VERSION"
    implementation "com.squareup.okhttp3:logging-interceptor:$OKHTTP_VERSION"


    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.8'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.2.0'

    implementation 'com.koushikdutta.ion:ion:2.2.1'

    debugImplementation "com.squareup.leakcanary:leakcanary-android:$LEAKCANARY_VERSION"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$LEAKCANARY_VERSION"
    debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:$LEAKCANARY_VERSION"

    implementation "com.jakewharton.timber:timber:$TIMBER_VERSION"
}
